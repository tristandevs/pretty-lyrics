body:has(.SliderBar.Active) {
	cursor: pointer;
}

.Root__right-sidebar:has(.main-nowPlayingView-section, canvas) {
	--background-tint: color-mix(
		in srgb,
		rgb(var(--spice-rgb-selected-row)) 7%,
		transparent
	);
	--spice-card: var(--background-tint);
	--background-tinted-base: var(--background-tint);

	.main-nowPlayingView-content {
		background: transparent;
	}

	.main-nowPlayingView-contextItemInfo::before {
		display: none;
	}

	.BeautifulLyricsBackground {
		div[data-overlayscrollbars-viewport], div[data-overlayscrollbars-viewport] > div {
			background: transparent !important;
		}
	}

	.BeautifulLyricsBackground div:has(> video) {
		mask: linear-gradient(
			180deg,
			transparent 0,
			transparent 0px, black 0px,
			black 70%, transparent 100%,
			transparent
		);

		video {
			filter: opacity(0.75) brightness(0.5);
		}
	}

	.BeautifulLyricsBackground .main-nowPlayingView-coverArtContainer div:has(video) {
		&::after, &::before {
			display: none;
		}
	}

	.BeautifulLyricsBackground .main-trackInfo-artists {
		opacity: 0.75;
		filter: brightness(1.15);
	}

	.main-nowPlayingView-coverArt {
		opacity: 0.95;
		box-shadow: #00000045 0 9px 20px 0px;
	}

	.main-nowPlayingView-section {
		background-color: var(--background-tinted-base) !important;
	}

	button[type="button"] {
		background-color: var(--background-tinted-base) !important;
		color: rgba(255, 255, 255, 0.8);

		.Button-sm-buttonSecondary-useBrowserDefaultFocusStyle,
		.Button-sm-buttonSecondary-isUsingKeyboard-useBrowserDefaultFocusStyle {
			border: 1px solid rgba(255, 255, 255, 0.5);
		}
	}
}


// Improves scroll-bar
.os-host:has(.BeautifulLyricsBackground),
#lyrics-cinema,
.Root__main-view:has(.BeautifulLyricsBackground) {
	.os-scrollbar {
		padding: 5px;

		.os-scrollbar-handle {
			mix-blend-mode: overlay;
			background-color: rgba(252, 249, 249, 0.117) !important;
		}
	}
}

// This is the entire lyrics configuration used to create the gradient backgrounds
.BeautifulLyricsBackground {
	// This is the overarching container, the parent of the container class
	overflow: hidden;
	position: relative;

	// This is needed so that the gradient-background can be visible
	&.main-nowPlayingView-sectionHeaderSpacing.main-nowPlayingView-lyricsGradient, .main-buddyFeed-content {
		background: transparent;
	}

	// These are full-screen background specific classes to make the gradient-background work/show properly
	&.BeautifulLyricsPage &-Container {
		max-width: 35%;
		max-height: 55%;

		scale: 290% 185%;
		transform-origin: left top;

		filter: saturate(2.5) brightness(0.65); // Blur-related
	}

	&.BeautifulLyricsPage.Fullscreen &-Container {
		max-width: 20%;
		max-height: 60%;

		scale: 500% 170%;
	}

	// These are right-side card background specific classes to adjust for contrast issues
	&:is(aside) &-Container {
		filter: saturate(2) brightness(0.7); // Blur-related
	}

	/*
		The idea behind this is to create a gradient-background that resembles Apple Music.

		We could technically simulate blob-merging of these colors and extract colors out of the
		cover-art. However - that is ridiculously expensive computationaly - and more importantly;
		I don't want to extract the colors from the cover-art in the first place.

		The easier solution is to use the cover-art as an image and blur it. To simulate blob-merging
		we have two circles with the image (two images cropped circularly) blurred significantly. We then
		apply a blend-mode to one of the circles and layer it on top. This helps sell the illusion that
		these colors are merging in blobs.
	*/

	// As the name suggests, this contains the color/back images - which make up the gradient itself
	&-Container {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		pointer-events: none;
		overflow: hidden;

		filter: saturate(1.5) brightness(0.8); // Blur-related

		// Sharable properties
		.Front,
		.Back,
		.BackCenter {
			/* This is to align our img element */
			position: absolute;
			width: 200%;
			/*aspect-ratio: 1/1;*/
			animation: rotate 35s linear infinite;

			/* Align our image to the center of our div */
			/*img, canvas {
				position: absolute;
				top: 50%;
				left: 50%;
				translate: -50% -50%;
			}*/

			filter: hue-rotate(var(--PlaceholderHueShift)) blur(40px); // Blur-related
			border-radius: 100em; // Blur-related
		}

		// The primary image which gives the blending effect it's illusional property
		.Front {
			right: 0;
			top: 0;
			z-index: 10;

			/*mix-blend-mode: soft-light;*/
		}

		// Additional image to cover space that the primary image doesn't cover (and to develop blob-blending)
		.Back {
			left: 0;
			bottom: 0;
			z-index: 1;
			animation-direction: reverse;
		}

		// Final image to cover the center
		.BackCenter {
			z-index: 0;

			width: 300%;
			right: -50%;
			top: -20%;

			animation-direction: reverse;
		}
	}
}

:root {
	--beautiful-lyrics-random-degree: 258deg;
}
@keyframes rotate {
	0% {
		transform: rotate(var(--beautiful-lyrics-random-degree));
	}

	100% {
		transform: rotate(calc(var(--beautiful-lyrics-random-degree) + 360deg));
	}
}